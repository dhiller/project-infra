# We need to retry a set of tasks, but block does not support retries,
# so we need to build our own retry paradigm. using recursion
- block:
    - name: Increment the retry count
      set_fact:
        retry_count: "{{ 1 if retry_count is undefined else retry_count | int + 1 }}"
        delay_inc: "{{ delay if delay_inc is undefined else ((delay_inc|float)*1.5) | int }}"

    - name: Get a list of all pods from prow namespace
      k8s_info:
        kind: Pod
        namespace: "{{ prowNamespace }}"
        kubeconfig: '{{ kubeconfig_path }}'
      register: pod_list

    - name: verify list of pods is not empty
      assert:
        quiet: true
        that: pod_list.resources != []
        success_msg: "Namespace correctly contain pods"
        fail_msg: "No pods in namespace"

    - name: verify all pods in prow namespace are running
      assert:
        quiet: true
        that:
          - "item.status.phase == 'Running'"
        fail_msg: "Pod {{ item.metadata.name }} is in status {{ item.status.phase }}"
        success_msg: "Pod {{ item.metadata.name }} is running"
      loop: "{{ pod_list.resources }}"
      loop_control:
        label: "{{ item.metadata.name }}"
  rescue:
    - name: fail if we hit max retry count
      fail:
        msg: "Timeout reached and not all Pods are running"
      when: "retry_count | int == {{ retries }}"
    - name: Message for the retry.
      debug:
        msg: FAILED ATTEMPT {{ retry_count }}/{{ retries }}. Retrying in {{ delay_inc }} seconds
    - name: Pause
      pause:
        seconds: "{{ delay_inc }}"
    - include_tasks: retry-pod-status.yml

# DO NOT put anything at the end of this file.
# Since the file is called recursively, anything added here will be run
# the same number of time we needed to recurse the file.
