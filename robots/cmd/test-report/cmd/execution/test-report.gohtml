<html>
<head>
    <title>test execution report</title>
    <meta charset="UTF-8"/>
    <style>
        table, th, td {
            border: 1px solid black;
        }
        table.noborder, th.noborder, td.noborder {
            border: 0;
        }
        th.vertical {
            writing-mode: vertical-rl;
            text-orientation: mixed;
        }
        td.stateCell {
            min-width: 2em;
            text-align: center;
        }
        .yellow {
            background-color: #ffff80;
        }
        .green {
            background-color: #9fff80;
        }
        .red {
            background-color: #ff8080;
        }
        .gray {
            background-color: #898989;
        }
        .right {
            text-align: right;
            width: 100%;
        }
        .filtered {
            text-decoration-line: underline;
            text-decoration-style: dotted;
        }

        .popup .popuptextReportConfig {
            display: none;
            width: 1024px;
            background-color: #FFFFFF;
            text-align: left;
            border-radius: 6px;
            padding: 8px 8px;
            position: absolute;
            z-index: 1;
            left: 100%;
            margin-left: -1024px;
        }

        .popup:hover .popuptextReportConfig {
            display: block;
            -webkit-animation: fadeIn 1s;
            animation: fadeIn 1s;
        }

    </style>
    <script>
        function enableFilterFields() {
            document.getElementById("filterByName").disabled = false;
            document.getElementById("excludeByName").disabled = false;
            document.getElementById("filterByNotRunCheckBox").disabled = false;
            document.getElementById("showDontRunCheckBox").disabled = false;
        }
        function updateFilteredRows() {
            let filter, table, tr, td, i, txtValue, filterByNotRunChecked, shouldShow, rowsShown;
            filterTerms = document.getElementById("filterByName").value.toUpperCase().split("|");
            excludeTerms = document.getElementById("excludeByName").value.toUpperCase().split("|");
            filterByNotRunChecked = document.getElementById("filterByNotRunCheckBox").checked;
            showDontRunChecked = document.getElementById("showDontRunCheckBox").checked;
            table = document.getElementById("report");
            tr = table.getElementsByTagName("tr");

            rowsShown = 0;
            for (i = 1; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[1];
                if (td) {
                    shouldShow = true
                    txtValue = td.textContent || td.innerText;
                    if (filterByNotRunChecked && td.className.indexOf("red") == -1) {
                        shouldShow = false
                    }
                    if (!showDontRunChecked && td.className.indexOf("filtered") !== -1) {
                        shouldShow = false
                    }
                    if (excludeTerms.length > 0 && excludeTerms[0] !== "") {
                        for (k = 0; k < excludeTerms.length; k++) {
                            if (txtValue.toUpperCase().indexOf(excludeTerms[k]) !== -1) {
                                shouldShow = false
                                break;
                            }
                        }
                    }
                    if (shouldShow === true && filterTerms.length > 0 && filterTerms[0] !== "") {
                        let found = false
                        for (k = 0; k < filterTerms.length; k++) {
                            if (txtValue.toUpperCase().indexOf(filterTerms[k]) !== -1) {
                                found = true
                                break;
                            }
                        }
                        if (found !== true) {
                            shouldShow = false
                        }
                    }
                    if (shouldShow === true) {
                        tr[i].style.display = "";
                        rowsShown++;
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
            updateRowsShown(rowsShown);
        }
        function initRowsShown() {
            updateRowsShown(document.getElementById("report").getElementsByTagName("tr").length - 1);
        }
        function updateRowsShown(rowsShown) {
            let rowsTotal = document.getElementById("report").getElementsByTagName("tr").length - 1;
            document.getElementById("totalRowsShown").innerText = "Showing "+rowsShown+" of "+rowsTotal;
        }
    </script>
</head>
<body onload="initRowsShown();updateFilteredRows();enableFilterFields();">
{{- /* gotype: kubevirt.io/project-infra/robots/pkg/test-report.Data */ -}}
<h1>test execution report</h1>
<div>
    {{ $.ReportConfigName }} report configuration<br/>
    data from {{ $.StartOfReport }} till {{ $.EndOfReport }}<br/>
</div>

<div id="reportConfig" class="popup right" >
    <u>report configuration</u>
    <pre class="popuptextReportConfig right" id="targetReportConfig">{{ $.ReportConfig }}</pre>
</div>

<table class="noborder">
    <tr>
        <td class="noborder">
        </td>
        <td class="noborder">
            <label for="filterByNotRunCheckBox">Only <span class="red">not run tests</span></label>
        </td>
        <td class="noborder">
            <input type="checkbox" id="filterByNotRunCheckBox" onClick="updateFilteredRows()" title="Show only rows that have not been run on any lane" disabled checked>
        </td>
    </tr>
    <tr>
        <td class="noborder">
        </td>
        <td class="noborder">
            <label for="showDontRunCheckBox">Include <span class="red filtered">tests that have been filtered</span> on all lanes</label>
        </td>
        <td class="noborder">
            <input type="checkbox" id="showDontRunCheckBox" onClick="updateFilteredRows()" title="Include tests that have been filtered with dont_run_tests.json on all lanes" disabled checked>
        </td>
    </tr>
    <tr>
        <td class="noborder">
            <b>Filters:</b>
        </td>
        <td class="noborder">
            <label for="filterByName">Exclude tests that don't contain</label>
        </td>
        <td class="noborder">
            <input type="text" id="filterByName" onkeyup="updateFilteredRows()" placeholder="term1|term2|..." disabled>
        </td>
    </tr>
    <tr>
        <td class="noborder">
        </td>
        <td class="noborder">
            <label for="excludeByName">Exclude tests that contain</label>
        </td>
        <td class="noborder">
            <input type="text" id="excludeByName" onkeyup="updateFilteredRows()" placeholder="term1|term2|..." disabled>
        </td>
    </tr>
</table>

<div id="totalRowsShown"><i>Loading rows...</i></div>
<table id="report">
    <tr>
        <th></th>
        <th></th>
        {{ range $job := $.LookedAtJobs }}
            <th class="vertical"><a href="{{ $.JenkinsBaseURL }}/job/{{ $job }}/">{{ $job }}</a></th>
        {{ end }}
    </tr>
    {{ range $row, $test := $.TestNames }}
        <tr>
            <td><div id="row{{$row}}"><a href="#row{{$row}}">{{ $row }}</a></div></td>
            <td class="{{ if (index $.SkippedTests $test) }}red{{ end }}{{ if (index $.FilteredTestNames $test) }} filtered{{ end }}">{{ $test }}</td>
            {{ range $col, $job := $.LookedAtJobs }}
                <td class="center stateCell">{{ with $skipped := (index $.TestNamesToJobNamesToSkipped $test $job) }}
                        <div id="r{{$row}}c{{$col}}" title="test
                                {{- if eq $skipped (index $.TestExecutionMapping "TestExecution_Skipped") }} skipped
                                {{- else if eq $skipped (index $.TestExecutionMapping "TestExecution_Run") }} run
                                {{- else if eq $skipped (index $.TestExecutionMapping "TestExecution_Unsupported") }} unsupported
                                {{- else }}
                                {{ end -}}"
                             class="
                                {{- if eq $skipped (index $.TestExecutionMapping "TestExecution_Skipped") }}yellow
                                {{- else if eq $skipped (index $.TestExecutionMapping "TestExecution_Run") }}green
                                {{- else if eq $skipped (index $.TestExecutionMapping "TestExecution_Unsupported") }}gray
                                {{- else }}
                                {{ end -}}" >
                            <input title="{{ $test }} &#013; {{ $job }}" type="checkbox" disabled
                                   {{- if eq $skipped (index $.TestExecutionMapping "TestExecution_Run") }} checked{{ end -}}/>
                        </div>
                    {{ else }}n/a{{ end }}</td>
            {{ end }}
        </tr>
    {{ end }}
</table>
</body>
</html>
